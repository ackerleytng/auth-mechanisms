version: '3.7'

services:
  traefik:
    image: "traefik:v2.2"
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      default:
        aliases:
          # This allows the other containers to also reach the services through
          #   this public address (as opposed to using hostnames)
          - keycloak.localhost
          - httpbin.localhost
          - httpbin-two.localhost
          - ace.localhost

  keycloak:
    image: jboss/keycloak:9.0.2
    volumes:
      - ./compose/keycloak/https/:/etc/x509/https
      - ./compose/keycloak/setup.sh/:/setup.sh
      - ./compose/keycloak/start.sh/:/start.sh
    entrypoint: /start.sh
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      # KEYCLOAK_LOGLEVEL: DEBUG
    depends_on:
      - keycloak-postgres
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.keycloak.rule=HostSNI(`keycloak.localhost`)"
      - "traefik.tcp.routers.keycloak.tls.passthrough=true"
      - "traefik.tcp.routers.keycloak.entrypoints=websecure"
      - "traefik.tcp.services.keycloak.loadbalancer.server.port=8443"

  keycloak-postgres:
    image: postgres:12
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  httpbin:
    image: kennethreitz/httpbin
    depends_on:
      - httpbin-gatekeeper

  httpbin-gatekeeper:
    image: alpine:3.8
    volumes:
      - ./compose/gatekeeper/:/gatekeeper/:ro
      - ./compose/gatekeeper/httpbin-config.yml:/tmp/config.yml:ro
      - ./compose/keycloak/https/tls.crt/:/usr/local/share/ca-certificates/tls.crt:ro
    entrypoint: /gatekeeper/start.sh
    depends_on:
      - keycloak
    environment:
      GATEKEEPER_CLIENT_ID: httpbin
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.httpbin.rule=HostSNI(`httpbin.localhost`)"
      - "traefik.tcp.routers.httpbin.tls.passthrough=true"
      - "traefik.tcp.routers.httpbin.entrypoints=websecure"
      - "traefik.tcp.services.httpbin.loadbalancer.server.port=443"

  httpbin-two:
    image: kennethreitz/httpbin
    depends_on:
      - httpbin-two-gatekeeper

  httpbin-two-gatekeeper:
    image: alpine:3.8
    volumes:
      - ./compose/gatekeeper/:/gatekeeper/:ro
      - ./compose/gatekeeper/httpbin-two-config.yml:/tmp/config.yml:ro
      - ./compose/keycloak/https/tls.crt/:/usr/local/share/ca-certificates/tls.crt:ro
    entrypoint: /gatekeeper/start.sh
    depends_on:
      - keycloak
    environment:
      GATEKEEPER_CLIENT_ID: httpbin-two
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.httpbin-two.rule=HostSNI(`httpbin-two.localhost`)"
      - "traefik.tcp.routers.httpbin-two.tls.passthrough=true"
      - "traefik.tcp.routers.httpbin-two.entrypoints=websecure"
      - "traefik.tcp.services.httpbin-two.loadbalancer.server.port=443"

  ace:
    image: openjdk:8-alpine
    volumes:
      - ./ace:/ace
      - ./compose/ace/start.sh:/start.sh:ro
      - ./compose/keycloak/https/tls.crt/:/tmp/tls.crt:ro
    working_dir: /ace
    depends_on:
      - ace-gatekeeper
    # Call /start.sh to start ace
    entrypoint: tail -f /dev/null

  ace-gatekeeper:
    image: alpine:3.8
    volumes:
      - ./compose/gatekeeper/:/gatekeeper/:ro
      - ./compose/gatekeeper/ace-config.yml:/tmp/config.yml:ro
      - ./compose/keycloak/https/tls.crt/:/usr/local/share/ca-certificates/tls.crt:ro
    entrypoint: /gatekeeper/start.sh list detail
    depends_on:
      - keycloak
    environment:
      GATEKEEPER_CLIENT_ID: ace
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.ace.rule=HostSNI(`ace.localhost`)"
      - "traefik.tcp.routers.ace.tls.passthrough=true"
      - "traefik.tcp.routers.ace.entrypoints=websecure"
      - "traefik.tcp.services.ace.loadbalancer.server.port=443"

  whoami:
    image: containous/whoami
    depends_on:
      - whoami-openresty

  whoami-openresty:
    image: openresty/openresty:1.15.8.3-2-buster-fat
    volumes:
      - ./compose/whoami/openresty/conf.d/:/etc/nginx/conf.d:ro
    depends_on:
      - whoami-opa
    entrypoint: sh -c 'opm get ledgetech/lua-resty-http xiedacon/lua-pretty-json chunpu/lua-min-url && exec /usr/bin/openresty -g "daemon off;"'

  whoami-opa:
    image: openpolicyagent/opa:0.19.2-rootless
    volumes:
      - ./compose/whoami/opa/:/tmp/opa/:ro
    depends_on:
      - whoami-gatekeeper
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "--log-format=json-pretty"
      - "--set=decision_logs.console=true"
      - "/tmp/opa"

  whoami-gatekeeper:
    image: alpine:3.8
    volumes:
      - ./compose/gatekeeper/:/gatekeeper/:ro
      - ./compose/gatekeeper/whoami-config.yml:/tmp/config.yml:ro
      - ./compose/keycloak/https/tls.crt/:/usr/local/share/ca-certificates/tls.crt:ro
    entrypoint: /gatekeeper/start.sh access
    depends_on:
      - keycloak
    environment:
      GATEKEEPER_CLIENT_ID: whoami
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.whoami.rule=HostSNI(`whoami.localhost`)"
      - "traefik.tcp.routers.whoami.tls.passthrough=true"
      - "traefik.tcp.routers.whoami.entrypoints=websecure"
      - "traefik.tcp.services.whoami.loadbalancer.server.port=443"

volumes:
  postgres-data:
